//Here is the possible panel for the graph and a good starting point.
// I will edit this as we go
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JComboBox;
import java.awt.FlowLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;


public class MyPanel extends JPanel implements ActionListener{

	JButton[] myButtons = new JButton[6000];
	

	public MyPanel()
	{
		setLayout(null);
		
		JComboBox ChartTypeCB = new JComboBox();
		ChartTypeCB.setModel(new DefaultComboBoxModel(new String[] {"Pie Chart", "Line Chart (Default)", "Block Chart"}));
		ChartTypeCB.setToolTipText("");
		ChartTypeCB.setBounds(10, 67, 121, 20);
		add(ChartTypeCB);
		
		JLabel lblChartTypes = new JLabel("Chart Types:");
		lblChartTypes.setBounds(10, 42, 98, 14);
		add(lblChartTypes);
		
		JComboBox StockCB = new JComboBox();
		StockCB.setModel(new DefaultComboBoxModel(new String[] {"TWTR", "NASDAQ", "FB"}));
		StockCB.setToolTipText("");
		StockCB.setBounds(10, 200, 121, 20);
		add(StockCB);
		
		JLabel lblStockInformation = new JLabel("Stock Information:");
		lblStockInformation.setBounds(10, 175, 121, 14);
		add(lblStockInformation);
		
		JButton NewWindowButton = new JButton("Open New Window");
		NewWindowButton.setBounds(10, 279, 141, 62);
		add(NewWindowButton);
		
		JPanel ChartPanel = new JPanel();
		ChartPanel.setBackground(Color.LIGHT_GRAY);
		ChartPanel.setBounds(188, 67, 438, 288);
		add(ChartPanel);
	
		
	}


	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		
	}
	
	private class otherActionListener implements ActionListener
	{

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			
			
			JButton myButton = (JButton)e.getSource();
			myButton.setBackground(Color.cyan);
		}
		
		
	}
}
